{"version":3,"sources":["webpack:///webpack/bootstrap 2d61acb3b3f3ac0fb9df","webpack:///./app/js/emitter.js","webpack:///./app/js/dom.js","webpack:///./app/js/model.js","webpack:///./tests/units/dom.js","webpack:///./tests/units/emitter.js","webpack:///./tests/units/model.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,wC;;;;;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAa;AACb;AACA;AACA;AACA;AACA,mCAAgC,MAAM;AACtC,mCAAgC;AAChC;AACA;AACA,4BAAyB;AACzB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,eAAY,OAAO;AACnB,eAAY,SAAS;AACrB;AACA;AACA;AACA,mDAAgD,MAAM;AACtD;AACA,mDAAgD,MAAM;AACtD;AACA;AACA;AACA,oCAAiC,gCAAgC;AACjE,2DAAwD,6BAA6B;AACrF,4CAAyC,6BAA6B;AACtE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAE;;;AAGF;AACA;AACA;AACA;AACA,eAAY,OAAO;AACnB,eAAY,SAAS;AACrB;AACA;AACA;;AAEA;AACA,oCAAiC,gCAAgC;AACjE,2DAAwD,6BAA6B;AACrF,4CAAyC,6BAA6B;AACtE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAI;AACJ;AACA,KAAE;;;AAGF;AACA;AACA;AACA,eAAY,OAAO;AACnB;AACA;AACA;AACA,yBAAsB,2BAA2B,8BAA8B;AAC/E;AACA;AACA;;AAEA;AACA,oCAAiC,gCAAgC;AACjE,2CAAwC,8BAA8B;AACtE,iDAA8C,4BAA4B;AAC1E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAE;;;AAGF;AACA;AACA;AACA,eAAY,OAAO;AACnB,eAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,oCAAiC,gCAAgC;AACjE,2DAAwD,6BAA6B;AACrF,4CAAyC,6BAA6B;AACtE;;AAEA;AACA;AACA;AACA,oFAAiF,wBAAwB,EAAE;AAC3G;AACA;AACA;AACA;AACA;AACA,KAAE;;;AAGF;AACA;AACA;AACA;AACA,eAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAoF,6BAA6B;AACjH;;AAEA;AACA;AACA;AACA;AACA,MAAG;AACH;AACA,8CAA2C,8BAA8B;AACzE;;AAEA;AACA;AACA;AACA,KAAE;;;AAGF;AACA;AACA;AACA,eAAY,OAAO;AACnB,eAAY,OAAO;AACnB;AACA;AACA;AACA,0BAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;;AAEA;AACA,kCAA+B,gCAAgC;AAC/D,2DAAwD,6BAA6B;AACrF;;AAEA;AACA;AACA;AACA,oCAAiC,0BAA0B;AAC3D;;AAEA,kBAAe,kBAAkB;AACjC;AACA,8CAA2C,mCAAmC;AAC9E;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;;;;;;;;AC/NA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,cAAW,OAAO;AAClB,cAAW,YAAY;AACvB,cAAW,KAAK;AAChB,eAAY,UAAU;AACtB;AACA;AACA;AACA,uBAAoB;AACpB,sBAAmB,gBAAgB;AACnC,uBAAoB,2DAA2D;AAC/E;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAc,sBAAsB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,cAAW,KAAK;AAChB,eAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAa,sBAAsB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,cAAW,KAAK;AAChB,cAAW,KAAK;AAChB,eAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAc,sBAAsB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,cAAW,QAAQ;AACnB,eAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAa,sBAAsB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;;;;;;;;;AC7KA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAW,OAAO,SAAS;AAC3B;AACA;AACA;AACA,2DAAwD,yBAAyB;AACjF;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAa;AACb;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,aAAU;AACV,iBAAc,OAAO;AACrB;;;AAGA;AACA;AACA;AACA,eAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAkC,yBAAyB;AAC3D;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAsB,WAAW;;AAEjC;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,aAAU;AACV,iBAAc,OAAO;AACrB;;;AAGA;AACA;AACA;AACA,cAAW,OAAO;AAClB,eAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAkC,yBAAyB;AAC3D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAqB,WAAW;;AAEhC;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,cAAW,OAAO;AAClB;AACA,eAAY,QAAQ;AACpB;AACA;AACA;AACA,0CAAuC,8BAA8B;AACrE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAW,OAAO;AAClB;AACA,eAAY,EAAE;AACd;AACA;AACA;AACA,0CAAuC,8BAA8B;AACrE;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,aAAU;AACV,iBAAc,OAAO;AACrB,iBAAc,EAAE;AAChB,iBAAc,EAAE;AAChB;;;AAGA;AACA;AACA;AACA,cAAW,OAAO;AAClB,cAAW,EAAE;AACb,eAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,kBAAe;;AAEf;AACA,0CAAuC,8BAA8B;AACrE;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAE;AACF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,cAAW,OAAO;AAClB,eAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAAuC,8BAA8B;AACrE;;AAEA;AACA,iBAAc;AACd;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,gBAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,aAAU,wBAAwB;AAClC;AACA;AACA;;;AAGA;AACA;AACA,iBAAc;AACd;AACA;AACA;AACA;;;AAGA;AACA;AACA,gBAAa,OAAO;AACpB,iBAAc;AACd;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAM;AACN;AACA;AACA;AACA,QAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,gBAAa,OAAO;AACpB,iBAAc;AACd;AACA;AACA;AACA;AACA;AACA,OAAI,UAAU,gBAAgB;AAC9B;AACA;;;AAGA;AACA;;;;;;;;;;ACvUA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAmB,iBAAiB;AACpC;;AAEA,sBAAmB,SAAS;AAC5B;AACA;;AAEA,sBAAmB,iBAAiB;AACpC;;AAEA,uBAAoB;AACpB;;AAEA,uBAAoB;AACpB;;AAEA,uBAAoB;AACpB;;AAEA,uBAAoB;AACpB;AACA;AACA;;AAEA,uBAAoB,mBAAmB;AACvC;AACA;;AAEA,uBAAoB;AACpB;AACA;;AAEA,uBAAoB,mBAAmB,mBAAmB;AAC1D;;AAEA,2BAAwB;AACxB,qBAAkB;AAClB,sBAAmB;AACnB,sBAAmB;AACnB;AACA,qBAAkB;AAClB,qBAAkB,UAAU;AAC5B;AACA;AACA;AACA;AACA;AACA,IAAC;;;AAGD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,IAAC;;;AAGD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA,IAAC;;;AAGD;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA0B;AAC1B;AACA;;AAEA,0BAAuB;AACvB,0BAAuB;AACvB,0BAAuB;AACvB;AACA;AACA;AACA;;AAEA,0BAAuB;AACvB;AACA,IAAC;;;;;;;;;;AClKD;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAC;;;AAGD;AACA,2BAAwB;AACxB,wBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAC;;;AAGD;AACA,2BAAwB;AACxB,wBAAqB;AACrB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,sBAAmB;AACnB;;AAEA,qBAAkB,UAAU;AAC5B;;AAEA,qBAAkB,SAAS;AAC3B;;AAEA,qBAAkB,YAAY;AAC9B;;AAEA,qBAAkB,WAAW;AAC7B;;AAEA,qBAAkB,gBAAgB;AAClC;;AAEA,qBAAkB,YAAY;AAC9B;;AAEA,qBAAkB,SAAS;AAC3B;AACA;;AAEA,qBAAkB,SAAS;AAC3B;AACA;;AAEA;AACA,qBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAC;;;AAGD;AACA,2BAAwB;AACxB,wBAAqB;AACrB,wBAAqB;AACrB;;AAEA;AACA,qBAAkB,0BAA0B;AAC5C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAC;;;AAGD;AACA,2BAAwB;AACxB,wBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAC;;;AAGD;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAE;AACF;AACA;AACA,KAAE;AACF;AACA,sBAAmB,YAAY;AAC/B,KAAE;AACF;AACA;AACA;;AAEA;AACA;AACA,mBAAgB,YAAY;;AAE5B;AACA;AACA,mBAAgB,YAAY;;AAE5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAgB,YAAY;AAC5B,IAAC;;;AAGD;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAE;AACF;AACA;AACA,KAAE;AACF;AACA,sBAAmB,YAAY;AAC/B,KAAE;AACF;AACA;AACA;;AAEA;AACA;AACA,mBAAgB,YAAY;;AAE5B;AACA;AACA,mBAAgB,YAAY;;AAE5B;AACA,IAAC;;;;;;;;;;AC9QD;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAgB,IAAI;AACpB;AACA;AACA,IAAC;;;AAGD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAsB;;AAEtB,YAAS,QAAQ;AACjB,uBAAoB,QAAQ;;AAE5B;AACA,4BAAyB,MAAM;AAC/B,KAAE;AACF;AACA,4BAAyB,QAAQ;AACjC,yBAAsB;AACtB,KAAE;AACF;AACA,YAAS,MAAM;AACf,IAAC;;;AAGD;AACA;;AAEA;;AAEA,mBAAgB,QAAQ;AACxB,uBAAoB,QAAQ;;AAE5B;AACA,4BAAyB,QAAQ;AACjC,yBAAsB;AACtB,KAAE;AACF;AACA;AACA,IAAC;;;AAGD;AACA;;AAEA,mBAAgB,QAAQ;AACxB,uBAAoB,QAAQ;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAa;;AAEb;AACA;AACA,IAAC;;;AAGD;AACA;;AAEA,mBAAgB,QAAQ;AACxB,uBAAoB,QAAQ;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAqB;AACrB;AACA,IAAC;;;AAGD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAE;AACF;AACA,uBAAoB,MAAM;;AAE1B,mBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA,KAAE;AACF;AACA,uBAAoB,MAAM;;AAE1B,mBAAgB,IAAI;AACpB;AACA;AACA,KAAE;AACF;AACA,uBAAoB,IAAI;AACxB,IAAC;;;AAGD;AACA;;AAEA;;AAEA;AACA,wBAAqB;AACrB;AACA;AACA,KAAE;AACF;;AAEA,mBAAgB,QAAQ;AACxB,uBAAoB,QAAQ;;AAE5B;AACA;AACA;AACA;AACA;AACA,wBAAqB,IAAI;AACzB,KAAE;AACF;AACA;AACA;AACA,IAAC","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2d61acb3b3f3ac0fb9df\n **/","/**\n * @module stb/emitter\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n */\nfunction Emitter () {\n\t/**\n\t * Inner hash table for event names and linked callbacks.\n\t * Manual editing should be avoided.\n\t *\n\t * @member {Object.<string, function[]>}\n\t *\n\t * @example\n\t * {\n\t *     click: [\n\t *         function click1 () { ... },\n\t *         function click2 () { ... }\n\t *     ],\n\t *     keydown: [\n\t *         function () { ... }\n\t *     ]\n\t * }\n\t **/\n\tthis.events = {};\n}\n\n\nEmitter.prototype = {\n\t/**\n\t * Bind an event to the given callback function.\n\t * The same callback function can be added multiple times for the same event name.\n\t *\n\t * @param {string} name event identifier\n\t * @param {function} callback function to call on this event\n\t *\n\t * @example\n\t * var obj = new Emitter();\n\t * obj.addListener('click', function ( data ) { ... });\n\t * // one more click handler\n\t * obj.addListener('click', function ( data ) { ... });\n\t */\n\taddListener: function ( name, callback ) {\n\t\t// @ifdef DEBUG\n\t\tif ( arguments.length !== 2 ) { throw 'wrong arguments number'; }\n\t\tif ( typeof name !== 'string' || name.length === 0 ) { throw 'wrong or empty name'; }\n\t\tif ( typeof callback !== 'function' ) { throw 'wrong callback type'; }\n\t\t// @endif\n\n\t\t// valid input\n\t\tif ( name && typeof callback === 'function' ) {\n\t\t\t// initialization may be required\n\t\t\tthis.events[name] = this.events[name] || [];\n\t\t\t// append this new event to the list\n\t\t\tthis.events[name].push(callback);\n\t\t}\n\t},\n\n\n\t/**\n\t * Add a one time listener for the event.\n\t * This listener is invoked only the next time the event is fired, after which it is removed.\n\t *\n\t * @param {string} name event identifier\n\t * @param {function} callback function to call on this event\n\t */\n\tonce: function ( name, callback ) {\n\t\tvar self = this;\n\n\t\t// @ifdef DEBUG\n\t\tif ( arguments.length !== 2 ) { throw 'wrong arguments number'; }\n\t\tif ( typeof name !== 'string' || name.length === 0 ) { throw 'wrong or empty name'; }\n\t\tif ( typeof callback !== 'function' ) { throw 'wrong callback type'; }\n\t\t// @endif\n\n\t\t// valid input\n\t\tif ( name && typeof callback === 'function' ) {\n\t\t\t// initialization may be required\n\t\t\tthis.events[name] = this.events[name] || [];\n\t\t\t// append this new event to the list\n\t\t\tthis.events[name].push(function onceWrapper ( data ) {\n\t\t\t\tcallback(data);\n\t\t\t\tself.removeListener(name, onceWrapper);\n\t\t\t});\n\t\t}\n\t},\n\n\n\t/**\n\t * Apply multiple listeners at once.\n\t *\n\t * @param {Object} callbacks event names with callbacks\n\t *\n\t * @example\n\t * var obj = new Emitter();\n\t * obj.addListeners({click: function ( data ) {}, close: function ( data ) {}});\n\t */\n\taddListeners: function ( callbacks ) {\n\t\tvar name;\n\n\t\t// @ifdef DEBUG\n\t\tif ( arguments.length !== 1 ) { throw 'wrong arguments number'; }\n\t\tif ( typeof callbacks !== 'object' ) { throw 'wrong callbacks type'; }\n\t\tif ( Object.keys(callbacks).length === 0 ) { throw 'no callbacks given'; }\n\t\t// @endif\n\n\t\t// valid input\n\t\tif ( typeof callbacks === 'object' ) {\n\t\t\tfor ( name in callbacks ) {\n\t\t\t\tif ( callbacks.hasOwnProperty(name) ) {\n\t\t\t\t\tthis.addListener(name, callbacks[name]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/**\n\t * Remove all instances of the given callback.\n\t *\n\t * @param {string} name event identifier\n\t * @param {function} callback function to remove\n\t *\n\t * @example\n\t * obj.removeListener('click', func1);\n\t */\n\tremoveListener: function ( name, callback ) {\n\t\t// @ifdef DEBUG\n\t\tif ( arguments.length !== 2 ) { throw 'wrong arguments number'; }\n\t\tif ( typeof name !== 'string' || name.length === 0 ) { throw 'wrong or empty name'; }\n\t\tif ( typeof callback !== 'function' ) { throw 'wrong callback type'; }\n\t\t// @endif\n\n\t\t// the event exists and should have some callbacks\n\t\tif ( Array.isArray(this.events[name]) ) {\n\t\t\t// rework the callback list to exclude the given one\n\t\t\tthis.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n\t\t\t// event has no more callbacks so clean it\n\t\t\tif ( this.events[name].length === 0 ) {\n\t\t\t\tdelete this.events[name];\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/**\n\t * Remove all callbacks for the given event name.\n\t * Without event name clears all events.\n\t *\n\t * @param {string} [name] event identifier\n\t *\n\t * @example\n\t * obj.removeAllListeners('click');\n\t * obj.removeAllListeners();\n\t */\n\tremoveAllListeners: function ( name ) {\n\t\t// @ifdef DEBUG\n\t\tif ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) { throw 'wrong or empty name'; }\n\t\t// @endif\n\n\t\t// check input\n\t\tif ( arguments.length === 0 ) {\n\t\t\t// no arguments so remove everything\n\t\t\tthis.events = {};\n\t\t} else if ( name ) {\n\t\t\t// @ifdef DEBUG\n\t\t\tif ( this.events[name] !== undefined ) { throw 'event is not removed'; }\n\t\t\t// @endif\n\n\t\t\t// only name is given so remove all callbacks for the given event\n\t\t\tdelete this.events[name];\n\t\t}\n\t},\n\n\n\t/**\n\t * Execute each of the listeners in order with the supplied arguments.\n\t *\n\t * @param {string} name event identifier\n\t * @param {Object} [data] options to send\n\t *\n\t * @example\n\t * obj.emit('init');\n\t * obj.emit('click', {src:panel1, dst:panel2});\n\t */\n\temit: function ( name, data ) {\n\t\tvar event = this.events[name],\n\t\t\ti;\n\n\t\t// @ifdef DEBUG\n\t\tif ( arguments.length < 1 ) { throw 'wrong arguments number'; }\n\t\tif ( typeof name !== 'string' || name.length === 0 ) { throw 'wrong or empty name'; }\n\t\t// @endif\n\n\t\t// the event exists and should have some callbacks\n\t\tif ( event !== undefined ) {\n\t\t\t// @ifdef DEBUG\n\t\t\tif ( !Array.isArray(event) ) { throw 'wrong event type'; }\n\t\t\t// @endif\n\n\t\t\tfor ( i = 0; i < event.length; i++ ) {\n\t\t\t\t// @ifdef DEBUG\n\t\t\t\tif ( typeof event[i] !== 'function' ) { throw 'wrong event callback type'; }\n\t\t\t\t// @endif\n\n\t\t\t\t// invoke the callback with parameters\n\t\t\t\tevent[i](data);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n// public export\nmodule.exports = Emitter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/js/emitter.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * @module stb/dom\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n/**\n * DOM manipulation module\n */\nvar dom = {};\n\n\n/**\n * Create a new HTML element.\n *\n * @param {string} tagName mandatory tag name\n * @param {Object|null} [attrList] element attributes\n * @param {...*} [content] element content (primitive value/values or other nodes)\n * @return {Node|null} HTML element or null on failure\n *\n * @example\n * dom.tag('table');\n * dom.tag('div', {}, 'some text');\n * dom.tag('div', {className:'top'}, dom.tag('span'), dom.tag('br'));\n * dom.tag('link', {rel:'stylesheet', type:'text/css', href:'http://some.url/'});\n */\ndom.tag = function ( tagName, attrList, content ) {\n\t/* jshint unused:vars */\n\n\tvar node = null,\n\t\ti, name;\n\n\t// minimal param is given\n\tif ( tagName ) {\n\t\t// empty element\n\t\tnode = document.createElement(tagName);\n\n\t\t// optional attribute list is given\n\t\tif ( attrList && typeof attrList === 'object' ) {\n\t\t\t/* jshint forin:false */\n\t\t\tfor ( name in attrList ) {\n\t\t\t\t// extend a new node with the given attributes\n\t\t\t\tnode[name] = attrList[name];\n\t\t\t}\n\t\t}\n\n\t\t// content (arguments except the first two)\n\t\tfor ( i = 2; i < arguments.length; i++ ) {\n\t\t\t// some data is given\n\t\t\tif ( arguments[i] ) {\n\t\t\t\t// regular HTML tag or plain data\n\t\t\t\tnode.appendChild(\n\t\t\t\t\ttypeof arguments[i] === 'object' ?\n\t\t\t\t\targuments[i] :\n\t\t\t\t\tdocument.createTextNode(arguments[i])\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t}\n\n\treturn node;\n};\n\n\n/**\n * Create a new DocumentFragment filled with the given non-empty elements if any.\n *\n * @param {...*} [node] fragment content (primitive value/values or other nodes)\n * @return {DocumentFragment} new placeholder\n *\n * @example\n * // gives an empty fragment element\n * dom.fragment();\n * // gives a fragment element with 3 div element inside\n * dom.fragment(dom.tag('div'), div2, div3);\n * // mixed case\n * dom.fragment('some text', 123, div3);\n */\ndom.fragment = function ( node ) {\n\t// prepare placeholder\n\tvar i, fragment = document.createDocumentFragment();\n\n\t// walk through all the given elements\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\tnode = arguments[i];\n\t\t// some data is given\n\t\tif ( node ) {\n\t\t\t// regular HTML tag or plain data\n\t\t\tfragment.appendChild(typeof node === 'object' ? node : document.createTextNode(node));\n\t\t}\n\t}\n\n\treturn fragment;\n};\n\n\n/**\n * Add the given non-empty data (HTML element/text or list) to the destination element.\n *\n * @param {Node} tagDst element to receive children\n * @param {...*} [content] element content (primitive value/values or other nodes)\n * @return {Node|null} the destination element - owner of all added data\n *\n * @example\n * // simple text value\n * add(some_div, 'Hello world');\n * // single DOM Element\n * add(some_div, some_other_div);\n * // DOM Element list\n * add(some_div, div1, div2, div3);\n * // mixed case\n * add(some_div, div1, 'hello', 'world');\n */\ndom.add = function ( tagDst, content ) {\n\t/* jshint unused:vars */\n\n\tvar i;\n\n\t// valid HTML tag as the destination\n\tif ( tagDst instanceof Node ) {\n\t\t// append all except the first one\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\t// some data is given\n\t\t\tif ( arguments[i] ) {\n\t\t\t\t// regular HTML tag or plain data\n\t\t\t\ttagDst.appendChild(\n\t\t\t\t\ttypeof arguments[i] === 'object' ?\n\t\t\t\t\targuments[i] :\n\t\t\t\t\tdocument.createTextNode(arguments[i])\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn tagDst;\n\t}\n\n\treturn null;\n};\n\n\n/**\n * Remove the given elements from the DOM.\n *\n * @param {...Node} [nodes] element to be removed\n * @return {boolean} operation status (true - all given elements removed)\n *\n * @example\n * dom.remove(document.querySelector('div.test'));\n * dom.remove(div1, div2, div3);\n */\ndom.remove = function ( nodes ) {\n\t/* jshint unused:vars */\n\n\tvar count = 0,  // amount of successfully removed nodes\n\t\ti;\n\n\t// walk through all the given elements\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t// valid non-empty tag\n\t\tif ( arguments[i] && arguments[i].parentNode ) {\n\t\t\tif ( arguments[i].parentNode.removeChild(arguments[i]) === arguments[i] ) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn arguments.length > 0 && count === arguments.length;\n};\n\n\n// public export\nmodule.exports = dom;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/js/dom.js\n ** module id = 2\n ** module chunks = 0\n **/","/**\n * @module stb/model\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar Emitter = require('./emitter');\n\n\n/**\n * Base model implementation.\n *\n * Represents domain-specific data or information that an application will be working with.\n * A typical example is a user account (e.g name, avatar, e-mail) or a music track (e.g title, year, album).\n * Holds information, but don’t handle behaviour and don’t format information or influence how data appears.\n *\n * @constructor\n *\n * @param {Object} [data={}] init attributes\n */\nfunction Model ( data ) {\n\t// @ifdef DEBUG\n\tif ( data !== undefined && typeof data !== 'object' ) { throw 'wrong data type'; }\n\t// @endif\n\n\t// parent init\n\tEmitter.call(this);\n\n\t/**\n\t * Model attributes with given data or empty hash table.\n\t *\n\t * @member {Object.<string, *>}\n\t **/\n\tthis.data = data || {};\n}\n\n\n// inheritance\nModel.prototype = Object.create(Emitter.prototype);\nModel.prototype.constructor = Model;\n\n\n// which of data fields is primary\nModel.prototype.idName = 'id';\n\n\n/**\n * Remove all attributes from the model event.\n *\n * @event Model#clear\n *\n * @type {Object}\n * @property {Object} data old model attributes\n */\n\n\n/**\n * Remove all attributes from the model.\n *\n * @return {boolean} operation status\n *\n * @fires Model#clear\n */\nModel.prototype.clear = function () {\n\tvar data = this.data;\n\n\t// @ifdef DEBUG\n\tif ( typeof data !== 'object' ) { throw 'wrong data type'; }\n\t// @endif\n\n\t// is there any data?\n\tif ( Object.keys(data).length > 0 ) {\n\t\t// reset\n\t\tthis.data = {};\n\n\t\t// notify listeners\n\t\tthis.emit('clear', {data: data});\n\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Set model data event.\n *\n * @event Model#init\n *\n * @type {Object}\n * @property {Object} data new model attributes\n */\n\n\n/**\n * Clear and set model data.\n *\n * @param {Object} data attributes\n * @return {boolean} operation status\n *\n * @fires Model#clear\n * @fires Model#init\n */\nModel.prototype.init = function ( data ) {\n\t// @ifdef DEBUG\n\tif ( typeof data !== 'object' ) { throw 'wrong data type'; }\n\t// @endif\n\n\t// valid input\n\tif ( data ) {\n\t\t// reset data\n\t\tthis.clear();\n\n\t\t// init with given data\n\t\tthis.data = data;\n\n\t\t// notify listeners\n\t\tthis.emit('init', {data: data});\n\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Check an attribute existence.\n *\n * @param {string} name attribute\n *\n * @return {boolean} attribute exists or not\n */\nModel.prototype.has = function ( name ) {\n\t// @ifdef DEBUG\n\tif ( typeof this.data !== 'object' ) { throw 'wrong this.data type'; }\n\t// @endif\n\n\t// hasOwnProperty method is not available directly in case of Object.create(null)\n\t//return Object.hasOwnProperty.call(this.data, name);\n\treturn this.data.hasOwnProperty(name);\n};\n\n/**\n * Get the model attribute by name.\n *\n * @param {string} name attribute\n *\n * @return {*} associated value\n */\nModel.prototype.get = function ( name ) {\n\t// @ifdef DEBUG\n\tif ( typeof this.data !== 'object' ) { throw 'wrong this.data type'; }\n\t// @endif\n\n\treturn this.data[name];\n};\n\n\n/**\n * Update or create a model attribute event.\n *\n * @event Model#change\n *\n * @type {Object}\n * @property {string} name attribute name\n * @property {*} [prev] old/previous attribute value (can be absent on attribute creation)\n * @property {*} [curr] new/current attribute value (can be absent on attribute removal)\n */\n\n\n/**\n * Update or create a model attribute.\n *\n * @param {string} name attribute\n * @param {*} value associated value\n * @return {boolean} operation status (true - attribute value was changed/created)\n *\n * @fires Model#change\n */\nModel.prototype.set = function ( name, value ) {\n\tvar isAttrSet = name in this.data,\n\t\temitData  = {name: name, curr: value};\n\n\t// @ifdef DEBUG\n\tif ( typeof this.data !== 'object' ) { throw 'wrong this.data type'; }\n\t// @endif\n\n\tif ( isAttrSet ) {\n\t\t// update\n\t\temitData.prev = this.data[name];\n\t\t// only if values are different\n\t\tif ( value !== emitData.prev ) {\n\t\t\tthis.data[name] = value;\n\n\t\t\t// notify listeners\n\t\t\tthis.emit('change', emitData);\n\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\t// create\n\t\tthis.data[name] = value;\n\n\t\t// notify listeners\n\t\tthis.emit('change', emitData);\n\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Delete the given attribute by name.\n *\n * @param {string} name attribute\n * @return {boolean} operation status (true - attribute was deleted)\n *\n * @fires Model#change\n */\nModel.prototype.unset = function ( name ) {\n\tvar isAttrSet = name in this.data,\n\t\temitData;\n\n\t// @ifdef DEBUG\n\tif ( typeof this.data !== 'object' ) { throw 'wrong this.data type'; }\n\t// @endif\n\n\tif ( isAttrSet ) {\n\t\temitData = {name: name, prev: this.data[name]};\n\t\tdelete this.data[name];\n\n\t\t// notify listeners\n\t\tthis.emit('change', emitData);\n\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n///**\n// * Extends the model with the given attribute list\n// * @param {Object} data\n// */\n//Model.prototype.attributes = function ( data ) {\n//\tvar index   = 0,\n//\t\tkeyList = data && typeof data === 'object' ? Object.keys(data) : [];\n//\tfor ( ; index < keyList.length; index++ ) {\n//\t\tthis.set(keyList[index], data[keyList[index]]);\n//\t}\n//};\n\n\n///**\n// * Prepare all data for sending to a server\n// * @return {Object}\n// */\n//Model.prototype.pack = function () {\n//\treturn this._data;\n//};\n\n\n///**\n// * Restores the received data from a server to a model data\n// * @param {Object} data\n// * @return {Object}\n// */\n//Model.prototype.unpack = function ( data ) {\n//\treturn data;\n//};\n\n\n///**\n// * Sync model to a server\n// */\n//Model.prototype.save = function () {\n//\tvar self = this;\n//\tif ( this.url ) {\n//\t\t// collect data\n//\t\tio.ajax(this.url, {\n//\t\t\t// request params\n//\t\t\tmethod: self._data[self.idName] ? 'put' : 'post',\n//\t\t\tdata  : self.pack(),\n//\t\t\tonload: function ( data ) {\n//\t\t\t\tdata = self.unpack(self.parse(data));\n//\t\t\t\tself.attributes(data);\n//\t\t\t\tconsole.log(data);\n//\t\t\t\tself.emit('save', true);\n//\t\t\t},\n//\t\t\t// error handlers\n//\t\t\tonerror:   this.saveFailure,\n//\t\t\tontimeout: this.saveFailure\n//\t\t});\n//\t}\n//};\n\n\n///**\n// * Error handler while model data fetch\n// */\n//Model.prototype.saveFailure = function () {\n//\tthis.emit('save', false);\n//};\n\n\n///**\n// * Converts received data from a server to a model attributes\n// * @param {string} response\n// * @return {Object}\n// */\n//Model.prototype.parse = function ( response ) {\n//\tvar data = {};\n//\ttry {\n//\t\tdata = JSON.parse(response).data;\n//\t} catch(e){ console.log(e); }\n//\treturn data;\n//};\n\n\n// public export\nmodule.exports = Model;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/js/model.js\n ** module id = 3\n ** module chunks = 0\n **/","/**\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n/* jshint undef:false */\n\n// dependencies\nvar dom = require('dom');\n\n\n// declare named module\nQUnit.module('dom');\n\n\ntest('tag', function testTag () {\n\tvar a, t;\n\n\ta = dom.tag('');\n\tstrictEqual(a, null, 'empty element');\n\n\ta = dom.tag('qwe');\n\tstrictEqual(a.tagName, 'QWE', 'not existing element');\n\n\ta = dom.tag('a');\n\tstrictEqual(a.tagName, 'A', 'link element');\n\tstrictEqual(a instanceof HTMLAnchorElement, true, 'link element type');\n\tstrictEqual(a instanceof Node, true, 'link element type');\n\n\ta = dom.tag('a', {className:'bold'});\n\tstrictEqual(a.className, 'bold', 'link element class');\n\n\ta = dom.tag('a', {data:123});\n\tstrictEqual(a.data, 123, 'link element custom attribute data');\n\tstrictEqual(a.outerHTML, '<a></a>', 'link element custom attribute html');\n\n\ta = dom.tag('a', {className:'bold'}, 'some text');\n\tstrictEqual(a.outerHTML, '<a class=\"bold\">some text</a>', 'link element outer html');\n\n\ta = dom.tag('a', {}, '');\n\tstrictEqual(a.innerHTML, '', 'link element empty html');\n\n\ta = dom.tag('a', {}, '', '', '', null, undefined, false);\n\tstrictEqual(a.innerHTML, '', 'link element empty complex html');\n\n\ta = dom.tag('a', {}, 'qwe');\n\tstrictEqual(a.innerHTML, 'qwe', 'link element html');\n\n\ta = dom.tag('a', {}, 'qwe', 'rty');\n\tstrictEqual(a.children.length, 0, 'text sub-elements nodes');\n\tstrictEqual(a.childNodes.length, 2, 'text sub-elements texts');\n\tstrictEqual(a.innerHTML, 'qwerty', 'link element html');\n\n\ta = dom.tag('a', {}, dom.tag('div', {}, 'qwe'));\n\tstrictEqual(a.innerHTML, '<div>qwe</div>', 'link nested element');\n\tstrictEqual(a.children.length, 1, 'link nested element size');\n\n\ta = dom.tag('a', {}, dom.tag('div'), dom.tag('div'), dom.tag('div'));\n\tstrictEqual(a.innerHTML, '<div></div><div></div><div></div>', 'nested element list');\n\tstrictEqual(a.children.length, 3, 'nested element list size');\n\n\ta = dom.tag('a', {}, dom.tag('div', {}, dom.tag('div', {}, dom.tag('div'))));\n\tstrictEqual(a.innerHTML, '<div><div><div></div></div></div>', 'nested elements');\n\n\tt = dom.tag('table', {},\n\t\tdom.tag('tr', {},\n\t\t\tdom.tag('td', {}, 1),\n\t\t\tdom.tag('td', {}, 2)\n\t\t),\n\t\tdom.tag('tr', {},\n\t\t\tdom.tag('td', {colSpan:2}, 12)\n\t\t)\n\t);\n\tstrictEqual(t.rows.length, 2, 'table element rows');\n\tstrictEqual(t.rows[1].cells.length, 1, 'table element cells');\n\tstrictEqual(t.rows[1].cells[0].colSpan, 2, 'table element colls');\n});\n\n\ntest('fragment', function testFragment () {\n\tvar f;\n\n\tf = dom.fragment();\n\tstrictEqual(f instanceof DocumentFragment, true, 'empty fragment');\n\tstrictEqual(f.hasChildNodes(), false, 'empty fragment');\n\n\tf = dom.fragment('', null, undefined, false);\n\tstrictEqual(f.childNodes.length, 0, 'fragment with 4 items');\n\n\tf = dom.fragment('text');\n\tstrictEqual(f.childNodes.length, 1, 'fragment with 1 text item');\n\n\tf = dom.fragment(dom.tag('div'));\n\tstrictEqual(f.childNodes.length, 1, 'fragment with 1 node item');\n\n\tvar el0 = '1',\n\t\tel1 = 'abc',\n\t\tel2 = dom.tag('div'),\n\t\tel3 = dom.tag('a', {className:'bold'}, 'some text');\n\tf = dom.fragment(el0, el1, el2, el3);\n\tstrictEqual(f.childNodes.length, 4, 'fragment with 4 items');\n\tstrictEqual(f.childNodes[0].nodeValue, el0, 'fragment with 4 items');\n\tstrictEqual(f.childNodes[1].nodeValue, el1, 'fragment with 4 items');\n\tstrictEqual(f.childNodes[2], el2, 'fragment with 4 items');\n\tstrictEqual(f.childNodes[3], el3, 'fragment with 4 items');\n});\n\n\ntest('add', function testAdd () {\n\tvar a, d;\n\n\tstrictEqual(dom.add(),        null, 'empty addition');\n\tstrictEqual(dom.add(''),      null, 'empty addition');\n\tstrictEqual(dom.add('123'),   null, 'empty addition');\n\tstrictEqual(dom.add(null),    null, 'empty addition');\n\tstrictEqual(dom.add(false),   null, 'empty addition');\n\tstrictEqual(dom.add(true),    null, 'empty addition');\n\tstrictEqual(dom.add(123),     null, 'empty addition');\n\tstrictEqual(dom.add([1,2,3]), null, 'empty addition');\n\n\ta = dom.add(dom.tag('div'));\n\tstrictEqual(a.nodeName, 'DIV', 'no addition but creation');\n\tstrictEqual(a.childNodes.length, 0, 'no addition but creation');\n\n\ta = dom.add(dom.tag('div'), dom.tag('a'));\n\tstrictEqual(a.childNodes.length, 1, 'addition and creation');\n\tstrictEqual(a.firstChild.nodeName, 'A', 'addition and creation');\n\n\tvar el0 = '1',\n\t\tel1 = 'abc',\n\t\tel2 = dom.tag('div'),\n\t\tel3 = dom.tag('a', {className:'bold'}, 'some text');\n\td = dom.tag('div');\n\ta = dom.add(d, el0, el1, el2, el3);\n\tstrictEqual(a.childNodes.length, 4, 'element list addition');\n\tstrictEqual(a.innerHTML, '1abc<div></div><a class=\"bold\">some text</a>', 'element list addition');\n});\n\n\ntest('remove', function testRemove () {\n\tvar d1, d2, d3;\n\n\tstrictEqual(dom.remove(),     false, 'empty');\n\tstrictEqual(dom.remove(null), false, 'null');\n\tstrictEqual(dom.remove(true), false, 'boolean');\n\tstrictEqual(dom.remove(''),   false, 'string');\n\tstrictEqual(dom.remove({}),   false, 'object');\n\tstrictEqual(dom.remove(34),   false, 'number');\n\tstrictEqual(dom.remove([]),   false, 'array');\n\n\td1 = dom.tag('div', {}, 'qwe1');\n\td2 = dom.tag('div', {}, 'qwe2');\n\td3 = dom.tag('div', {}, 'qwe3');\n\tdom.add(document.body, d1, d2, d3);\n\tstrictEqual(dom.remove(d1), true, 'simple node');\n\tstrictEqual(dom.remove(d2, d3), true, 'two nodes');\n\tstrictEqual(dom.remove(d1), false, 'already removed node');\n\n\td1 = dom.tag('div', {}, 'qwe1');\n\tstrictEqual(dom.remove(d1), false, 'detached element');\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./tests/units/dom.js\n ** module id = 4\n ** module chunks = 0\n **/","/**\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n/* jshint undef:false */\n\n// dependencies\nvar Emitter = require('emitter');\n\n\n// declare named module\nQUnit.module('emitter');\n\n\ntest('constructor', function testConstructor () {\n\tvar em;\n\n\tem = new Emitter();\n\tstrictEqual(typeof em.events, 'object', 'type');\n\tstrictEqual(em.events.constructor, Object, 'constructor type');\n\tstrictEqual(Object.keys(em.events).length, 0, 'keys');\n});\n\n\ntest('addListener', function testAddListener () {\n\tvar f1 = function () {},\n\t\tf2 = function () {},\n\t\tem;\n\n\tem = new Emitter();\n\tem.addListener();\n\tstrictEqual(Object.keys(em.events).length, 0, 'wrong add');\n\tem.addListener('click');\n\tstrictEqual(Object.keys(em.events).length, 0, 'wrong add');\n\tem.addListener('click', 123);\n\tstrictEqual(Object.keys(em.events).length, 0, 'wrong add');\n\n\tem = new Emitter();\n\tem.addListener('click', f1);\n\tstrictEqual(Object.keys(em.events).length, 1, 'one event');\n\tstrictEqual(Array.isArray(em.events.click), true, 'event list type');\n\tstrictEqual(em.events.click.length, 1, 'callbacks amount');\n\tstrictEqual(typeof em.events.click[0], 'function', 'new callback type');\n\tstrictEqual(em.events.click[0], f1, 'new callback link');\n\n\tem.addListener('click', f2);\n\tstrictEqual(em.events.click.length, 2, 'callbacks amount');\n\tstrictEqual(typeof em.events.click[1], 'function', 'new callback type 2');\n\tstrictEqual(em.events.click[1], f2, 'new callback link 2');\n\n\tem = new Emitter();\n\tem.addListener('click', f1);\n\tem.addListener('click', f1);\n\tem.addListener('click', f1);\n\tstrictEqual(em.events.click.length, 3, 'callbacks duplicates');\n});\n\n\ntest('addListeners', function testAddListeners () {\n\tvar f1 = function () {},\n\t\tf2 = function () {},\n\t\tem;\n\n\tem = new Emitter();\n\tem.addListeners();\n\tstrictEqual(Object.keys(em.events).length, 0, 'wrong add');\n\n\tem.addListeners([]);\n\tstrictEqual(Object.keys(em.events).length, 0, 'wrong add');\n\n\tem.addListeners('');\n\tstrictEqual(Object.keys(em.events).length, 0, 'wrong add');\n\n\tem.addListeners(true);\n\tstrictEqual(Object.keys(em.events).length, 0, 'wrong add');\n\n\tem.addListeners(false);\n\tstrictEqual(Object.keys(em.events).length, 0, 'wrong add');\n\n\tem.addListeners(undefined);\n\tstrictEqual(Object.keys(em.events).length, 0, 'wrong add');\n\n\tem.addListeners({});\n\tstrictEqual(Object.keys(em.events).length, 0, 'empty add');\n\n\tem.addListeners({click:123});\n\tstrictEqual(Object.keys(em.events).length, 0, 'wrong add');\n\n\tem.addListeners({click:[]});\n\tstrictEqual(Object.keys(em.events).length, 0, 'wrong add');\n\n\tem.addListeners({click:false});\n\tstrictEqual(Object.keys(em.events).length, 0, 'wrong add');\n\n\tem.addListeners({click:null});\n\tstrictEqual(Object.keys(em.events).length, 0, 'wrong add');\n\n\tem.addListeners({click:undefined});\n\tstrictEqual(Object.keys(em.events).length, 0, 'wrong add');\n\n\tem.addListeners({click:'123'});\n\tstrictEqual(Object.keys(em.events).length, 0, 'wrong add');\n\n\tem.addListeners({click:f1});\n\tstrictEqual(Object.keys(em.events).length, 1, 'normal add');\n\tstrictEqual(em.events.click.length, 1, 'callbacks amount');\n\n\tem.addListeners({click:f1});\n\tstrictEqual(Object.keys(em.events).length, 1, 'double add');\n\tstrictEqual(em.events.click.length, 2, 'callbacks amount');\n\n\tem = new Emitter();\n\tem.addListeners({click:f1, close:f2, ok:f1});\n\tstrictEqual(Object.keys(em.events).length, 3, 'double add');\n\tstrictEqual(em.events.click.length, 1, 'callbacks amount');\n\tstrictEqual(em.events.close.length, 1, 'callbacks amount');\n\tstrictEqual(em.events.ok.length, 1, 'callbacks amount');\n\tstrictEqual(em.events.click[0], f1, 'callback link');\n\tstrictEqual(em.events.close[0], f2, 'callback link');\n\tstrictEqual(em.events.ok[0], f1, 'callback link');\n});\n\n\ntest('removeListener', function testRemoveListener () {\n\tvar f1 = function () {},\n\t\tf2 = function () {},\n\t\tf3 = function () {},\n\t\tem;\n\n\tem = new Emitter();\n\tem.addListeners({click:f1, close:f2, ok:f1});\n\tstrictEqual(Object.keys(em.events).length, 3, 'add 3 events');\n\n\tem.removeListener('click', f2);\n\tstrictEqual(Object.keys(em.events).length, 3, 'wrong removal');\n\tstrictEqual(em.events.click.length, 1, 'callbacks amount');\n\n\tem.removeListener('click', f3);\n\tstrictEqual(Object.keys(em.events).length, 3, 'wrong removal');\n\tstrictEqual(em.events.click.length, 1, 'callbacks amount');\n\n\tem.removeListener('click', f1);\n\tstrictEqual(Object.keys(em.events).length, 2, 'normal removal');\n\tstrictEqual(em.events.click, undefined, 'no event name');\n\n\tem = new Emitter();\n\tem.addListener('click', f1);\n\tem.addListener('click', f1);\n\tem.addListener('click', f1);\n\tstrictEqual(em.events.click.length, 3, 'callbacks duplicates');\n\tem.removeListener('click', f1);\n\tstrictEqual(em.events.click, undefined, 'callbacks duplicates');\n\tem.removeListener('click', f1);\n\tstrictEqual(em.events.click, undefined, 'double removal');\n});\n\n\ntest('removeAllListeners', function testRemoveAllListeners () {\n\tvar f1 = function () {},\n\t\tf2 = function () {},\n\t\tem;\n\n\tem = new Emitter();\n\tem.addListener('click', f1);\n\tem.addListener('click', f2);\n\tstrictEqual(em.events.click.length, 2, 'init');\n\tem.removeAllListeners('click');\n\tstrictEqual(em.events.click, undefined, 'removal');\n\n\tem = new Emitter();\n\tem.addListener('click', f1);\n\tem.addListener('click', f2);\n\tem.addListener('close', f1);\n\tem.addListener('close', f2);\n\tstrictEqual(em.events.click.length, 2, 'init');\n\tstrictEqual(em.events.close.length, 2, 'init');\n\tem.removeAllListeners('click');\n\tem.removeAllListeners('close');\n\tstrictEqual(em.events.click, undefined, 'removal');\n\tstrictEqual(em.events.close, undefined, 'removal');\n\tem.removeAllListeners('click');\n\tem.removeAllListeners('close');\n\tstrictEqual(em.events.click, undefined, 'double removal');\n\tstrictEqual(em.events.close, undefined, 'double removal');\n\n\tem = new Emitter();\n\tem.addListener('click', f1);\n\tem.addListener('click', f2);\n\tem.addListener('close', f1);\n\tem.addListener('close', f2);\n\tstrictEqual(Object.keys(em.events).length, 2, 'init');\n\tstrictEqual(em.events.click.length, 2, 'init');\n\tstrictEqual(em.events.close.length, 2, 'init');\n\tem.removeAllListeners();\n\tstrictEqual(Object.keys(em.events).length, 0, 'removal');\n\tem.removeAllListeners();\n\tstrictEqual(Object.keys(em.events).length, 0, 'double removal');\n});\n\n\ntest('emit', function testEmit () {\n\tvar em;\n\n\texpect(9);\n\n\tem = new Emitter();\n\tem.addListener('e1', function ( data ) {\n\t\tstrictEqual(data, undefined, 'emit without data');\n\t});\n\tem.addListener('e2', function ( data ) {\n\t\tstrictEqual(data, 123, 'emit with data');\n\t});\n\tem.addListener('e3', function ( data ) {\n\t\tpropEqual(data, {a:1,b:2,c:3}, 'emit with complex data');\n\t});\n\tstrictEqual(em.events.e1.length, 1, 'init');\n\tstrictEqual(em.events.e2.length, 1, 'init');\n\tstrictEqual(em.events.e3.length, 1, 'init');\n\n\tem.emit('e1');\n\tem.emit('e2', 123);\n\tem.emit('e3', {a:1,b:2,c:3});\n\n\tem.emit('e1');\n\tem.emit('e2', 123);\n\tem.emit('e3', {a:1,b:2,c:3});\n\n\tem.emit();\n\tem.emit(null);\n\tem.emit(false);\n\tem.emit(undefined);\n\n\tem.removeAllListeners();\n\tem.emit('e1');\n\tem.emit('e2', 123);\n\tem.emit('e3', {a:1,b:2,c:3});\n});\n\n\ntest('once', function testOnce () {\n\tvar em;\n\n\texpect(7);\n\n\tem = new Emitter();\n\tem.once('e1', function ( data ) {\n\t\tstrictEqual(data, undefined, 'emit without data');\n\t});\n\tem.once('e2', function ( data ) {\n\t\tstrictEqual(data, 123, 'emit with data');\n\t});\n\tem.once('e3', function ( data ) {\n\t\tpropEqual(data, {a:1,b:2,c:3}, 'emit with complex data');\n\t});\n\tstrictEqual(em.events.e1.length, 1, 'init');\n\tstrictEqual(em.events.e2.length, 1, 'init');\n\tstrictEqual(em.events.e3.length, 1, 'init');\n\n\tem.emit('e1');\n\tem.emit('e2', 123);\n\tem.emit('e3', {a:1,b:2,c:3});\n\n\tem.emit('e1');\n\tem.emit('e2', 123);\n\tem.emit('e3', {a:1,b:2,c:3});\n\n\tstrictEqual(Object.keys(em.events).length, 0, 'no events');\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./tests/units/emitter.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n/* jshint undef:false */\n\n// dependencies\nvar Model = require('model');\n\n\n// declare named module\nQUnit.module('model');\n\n\ntest('constructor', function testConstructor () {\n\tvar m;\n\n\tm = new Model();\n\tstrictEqual(typeof m.data, 'object', 'type');\n\tstrictEqual(typeof m.events, 'object', 'type');\n\tstrictEqual(m.data.constructor, Object, 'constructor type');\n\tstrictEqual(Object.keys(m.data).length, 0, 'keys');\n\n\tm = new Model(null);\n\tstrictEqual(m.data.constructor, Object, 'constructor type');\n\tstrictEqual(Object.keys(m.data).length, 0, 'keys');\n\n\tm = new Model(undefined);\n\tstrictEqual(m.data.constructor, Object, 'constructor type');\n\tstrictEqual(Object.keys(m.data).length, 0, 'keys');\n\n\tm = new Model(123);\n\tstrictEqual(m.data.constructor, Object, 'constructor type');\n\tstrictEqual(Object.keys(m.data).length, 0, 'keys');\n\n\tm = new Model('qwe');\n\tstrictEqual(m.data.constructor, Object, 'constructor type');\n\tstrictEqual(Object.keys(m.data).length, 0, 'keys');\n\n\tm = new Model(true);\n\tstrictEqual(m.data.constructor, Object, 'constructor type');\n\tstrictEqual(Object.keys(m.data).length, 0, 'keys');\n\n\tm = new Model([]);\n\tstrictEqual(m.data.constructor, Array, 'constructor type');\n\tstrictEqual(Object.keys(m.data).length, 0, 'keys');\n\n\tm = new Model({a:1});\n\tstrictEqual(m.data.constructor, Object, 'constructor type');\n\tstrictEqual(Object.keys(m.data).length, 1, 'keys');\n});\n\n\ntest('data', function testData () {\n\tvar m;\n\n\texpect(16);\n\n\tm = new Model();\n\tstrictEqual(m.init(), false, 'wrong param');\n\tstrictEqual(m.init(''), false, 'wrong param');\n\tstrictEqual(m.init('qwe'), false, 'wrong param');\n\tstrictEqual(m.init(null), false, 'wrong param');\n\tstrictEqual(m.init(undefined), false, 'wrong param');\n\tstrictEqual(m.init(123), false, 'wrong param');\n\tstrictEqual(m.init(12.3), false, 'wrong param');\n\tstrictEqual(m.init(true), false, 'wrong param');\n\tstrictEqual(m.init(false), false, 'wrong param');\n\tstrictEqual(m.init(1,1,1,1), false, 'wrong param');\n\tstrictEqual(m.init([]), true, 'wrong array param');\n\n\tstrictEqual(m.init({}), true, 'normal param');\n\n\tm.init({a:1,b:2});\n\tpropEqual(m.data, {a:1,b:2}, 'normal param');\n\n\tm.addListener('init', function ( event ) {\n\t\tpropEqual(event.data, {a:123}, 'init event');\n\t});\n\tm.addListener('clear', function ( event ) {\n\t\tpropEqual(event.data, {a:1,b:2}, 'clear event');\n\t\tpropEqual(m.data, {}, 'clear event check');\n\t});\n\tm.init();\n\tm.init({a:123});\n});\n\n\ntest('clear', function testClear () {\n\tvar m;\n\n\texpect(5);\n\n\tm = new Model({a:1,b:2});\n\tpropEqual(m.data, {a:1,b:2}, 'normal init');\n\n\tm.addListener('clear', function ( event ) {\n\t\tpropEqual(event.data, {a:1,b:2}, 'clear event');\n\t\tpropEqual(m.data, {}, 'clear event check');\n\t});\n\tok(m.clear(), 'do clear');\n\tok(!m.clear(), 'do clear again');\n});\n\n\ntest('has', function testHas () {\n\tvar m;\n\n\tm = new Model({a:1,b:2});\n\tpropEqual(m.data, {a:1,b:2}, 'normal init');\n\n\tok(m.has('a'), 'present');\n\tok(m.has('b'), 'present');\n\tok(!m.has('c'), 'not present');\n\tok(!m.has(''), 'not present');\n\tok(!m.has(null), 'not present');\n\tok(!m.has(), 'not present');\n\tok(!m.has(123), 'not present');\n\tok(!m.has(undefined), 'not present');\n\tok(!m.has(false), 'not present');\n\tok(!m.has(true), 'not present');\n\tok(!m.has([]), 'not present');\n\tok(!m.has({}), 'not present');\n\n\tm.clear();\n\tok(!m.has('a'), 'not present');\n});\n\n\ntest('get', function testGet () {\n\tvar m;\n\n\tm = new Model({a:1,b:2});\n\tpropEqual(m.data, {a:1,b:2}, 'normal init');\n\n\tstrictEqual(m.get('a'), 1, 'one attr');\n\tstrictEqual(m.get('c'), undefined, 'missing attr');\n\tstrictEqual(m.get(123), undefined, 'missing attr');\n\tstrictEqual(m.get(null), undefined, 'missing attr');\n\tstrictEqual(m.get(true), undefined, 'missing attr');\n\tstrictEqual(m.get(false), undefined, 'missing attr');\n\tstrictEqual(m.get(undefined), undefined, 'missing attr');\n\tstrictEqual(m.get({}), undefined, 'missing attr');\n\tstrictEqual(m.get([]), undefined, 'missing attr');\n});\n\n\ntest('set', function testSet () {\n\tvar m;\n\n\texpect(14);\n\n\tm = new Model();\n\tm.addListener('change', function ( event ) {\n\t\tstrictEqual(event.name, 'a', 'create: name');\n\t\tstrictEqual('prev' in event, false, 'create: prev');\n\t\tstrictEqual('curr' in event, true, 'create: curr');\n\t\tstrictEqual(event.curr, 123, 'create: curr data');\n\t});\n\tok(m.set('a', 123), 'set operation');\n\tpropEqual(m.data, {a:123}, 'check');\n\n\tm = new Model({a:0});\n\tm.addListener('change', function ( event ) {\n\t\tstrictEqual(event.name, 'a', 'update: name');\n\t\tstrictEqual('prev' in event, true, 'update: prev');\n\t\tstrictEqual('curr' in event, true, 'update: curr');\n\t\tstrictEqual(event.curr, 222, 'update: curr data');\n\t});\n\tok(m.set('a', 222), 'set operation');\n\tpropEqual(m.data, {a:222}, 'check');\n\n\tm = new Model({a:0});\n\tm.addListener('change', function () {\n\t\tok(false, 'should not be called');\n\t});\n\tok(!m.set('a', 0), 'set operation');\n\tpropEqual(m.data, {a:0}, 'check');\n});\n\n\ntest('unset', function testUnset () {\n\tvar m;\n\n\texpect(11);\n\n\tm = new Model();\n\tpropEqual(m.data, {}, 'normal init');\n\tm.addListener('change', function () {\n\t\tok(false, 'should not be called');\n\t});\n\tok(!m.unset('qwe'), 'nothing to remove');\n\n\tm = new Model({a:1,b:2});\n\tpropEqual(m.data, {a:1,b:2}, 'normal init');\n\n\tm.addListener('change', function ( event ) {\n\t\tstrictEqual(event.name, 'a', 'removal: name');\n\t\tstrictEqual('prev' in event, true, 'removal: prev');\n\t\tstrictEqual('curr' in event, false, 'removal: curr');\n\t\tstrictEqual(event.prev, 1, 'removal: prev data');\n\t\tpropEqual(m.data, {b:2}, 'result');\n\t});\n\tok(m.unset('a'), 'do removal');\n\tok(!m.unset('a'), 'do removal again');\n\tok(!m.unset('qwe'), 'nothing to remove');\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./tests/units/model.js\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":"","file":"build.js"}