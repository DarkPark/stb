// styles necessary for components
//
// @author Stanislav Kalashnik <sk@infomir.eu>
// @license GNU GENERAL PUBLIC LICENSE Version 3

.component {
	// component's outer dom element

	&.hidden {
		// need to force
		// as some components apply "display" later
		display: none !important;
	}

	&.page {
		// hidden by default
		width:      unit(@width, px);
		height:     unit(@height, px);
		//padding    : unit(@availTop, px) unit(@availRight, px) unit(@availBottom, px) unit(@availLeft, px);
		padding:    0;
		position:   absolute;
		visibility: hidden;
		overflow:   hidden;

		// only one active page is visible
		&.active {
			visibility: visible
		}
	}

	&.modal {
		width:            unit(@width, px);
		height:           unit(@height, px);
		top:              0;
		left:             0;
		position:         absolute;
		background-color: black;
		opacity:          0.6;
	}

	&.modalBox {
		// inheritance
		.component.modal();

		display: table;

		> div.cell {
			display:        table-cell;
			vertical-align: middle;
			text-align:     center;

			> div.content {
				display:          inline-block;
				background-color: #333;
				min-width:        20%;
				min-height:       10%;
			}
		}
	}

	&.modalMessage {
		// inheritance
		.component.modalBox();

		> div.cell > div.content {
			> div.header {

			}
		}
	}

	&.panel {
		padding:          unit(@panelPaddingY, px) unit(@panelPaddingX, px);
		background-color: #222;
	}

	//	&.infoPanel {
	//		.head {
	//			background-color: #333;
	//			padding : unit(@panelPaddingY, px) unit(@panelPaddingX, px);
	//		}
	//		.body {
	//			background-color: #222;
	//			padding : unit(@panelPaddingY, px) unit(@panelPaddingX, px);
	//		}
	//	}

	&.button {
		background-color: #002042;
		//outline          : 2px solid grey;
		//outline-offset   : -2px;
		display:          inline-block;
		padding:          unit(@buttonPaddingY, px) unit(@buttonPaddingX, px);
		height:           unit(@buttonHeight, px);
		line-height:      unit(@buttonHeight, px);
		vertical-align:   middle;
		cursor:           pointer;

		&.icon {
			padding-left:        unit(@buttonHeight + @buttonPaddingX, px);
			background-repeat:   no-repeat;
			background-position: unit(@buttonPaddingX, px) center;
		}

		&:hover {
			background-color: #005b9c;
		}

		&.focus {
			background-color: #005b9c;
			//outline : 2px solid red;
		}

		&.click {
			background-color: #0073c4;
		}
	}

	&.checkBox {
		cursor:           pointer;
		display:          inline-block;
		width:            unit(@checkBoxWidth, px);
		height:           unit(@checkBoxHeight, px);
		line-height:      unit(@checkBoxHeight, px);
		//border: 3px solid #005b9c;
		background-color: #333;
		// hack to get rid of gap
		vertical-align:   bottom;

		&.checked {
			background-color: orange;
		}
	}

	&.grid {
		//display: inline-block;
		//width: unit(@checkBoxWidth, px);
		//height: unit(@checkBoxHeight, px);
		//border: 3px solid #005b9c;
		background-color: #333;

		table {
			width:        100%;
			table-layout: fixed;

			td.item {
				cursor:         pointer;
				padding:        unit(@gridItemPaddingY, px) unit(@gridItemPaddingX, px);
				vertical-align: middle;
				text-align:     center;
			}
			td.item.mark {
				color:            black;
				background-color: green;
			}
			td.item.focus {
				color:            black;
				background-color: orange;
			}
			td.item.focus.mark {
				color:            white;
				background-color: #AE7200;
			}
			td.item.disable {
				color:            grey;
				background-color: #111;
			}
		}
	}

	&.list {
		background-color: #333;
		//display: table;
		//table-layout: fixed;
		width:            100%;
		//min-height: 250px;

		//> .body {
		//display : table-column;

		> .item {
			cursor:         pointer;
			padding:        unit(@listItemPaddingY, px) unit(@listItemPaddingX, px);
			vertical-align: middle;
			height:         unit(@listItemHeight, px);
			line-height:    unit(@listItemHeight, px);
			//display: table-row;

			&.mark {
				background-color: green;
				color:            black;
			}

			&.focus {
				background-color: orange;
				color:            black;
			}

			&.focus.mark {
				background-color: #AE7200;
				color:            white;
			}
		}
		//}
	}
	&.list.horizontal {
		display:      table;
		table-layout: fixed;
		width:        100%;
		//min-height: 50px;

		//> .body {
		//display : table-row;

		> .item {
			display:        table-cell;
			text-align:     center;
			vertical-align: middle;
		}
		//}
	}

	&.progressBar {
		height:           unit(@progressBarHeight, px);
		background-color: grey;

		> .value {
			height:           unit(@progressBarHeight, px);
			background-color: orange;
		}
	}

	&.scrollBar {
		background-color: grey;
		position:         relative;

		&.horizontal {
			height: 8px;
			width:  100%;
		}
		&.vertical {
			height: 100%;
			width:  8px;
		}

		> .value {
			background-color: orange;
			height:           8px;
			width:            8px;
		}
	}

	&.input {
		width:     200px;
		height:    40px;
		border:    1px solid rgb(204, 204, 204);
		cursor:    text;
		overflow:  hidden;
		font-size: 37px;
		color:     #888;
		.caret {
			margin-top: 2px;
			height:     36px;
			width:      1px;
			border:     none;
			background: #ccc;
			display:    block;
			float:      left;
		}
		.char {
			color:      #000;
			margin-top: 0;
			display:    block;
			float:      left;
		}
	}

	&.widget {
		position: absolute;
	}
}
